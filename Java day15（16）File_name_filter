//文件名过滤器
public class demo16_File_name_filter {
    //第一种：返回的是文件字符串
    public static void main(String[] args) {
        File file1 = new File("D:\\DVC");
        //获取t2103办公目录下的后缀为.XLSX的文件
        //不用过滤器：
        File[] files = file1.listFiles();
        //遍历数组，获取文件名，判断结尾
        for (File f : files) {
            if (f.isFile() & f.getName().endsWith(".doc")) {
                System.out.println(f.getAbsoluteFile());//表示获取抽象路径
            }

        }
        System.out.println("============================================");
        //第二种，使用FilenameFilter接口
        FilenameFilter fileter=new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                //dir表示文件所在的文件夹，name表示文件名称
                //  System.out.println("dir="+dir.getName());
                // System.out.println("name="+name);
                //根据文件名称判断
                if(name.endsWith(".doc")){
                    return  true;
                }
                return false;//如果返回TRUE，就将此文件添加到数组中
            }
        };
        //对filter调用file1.listFiles方法（会不断进行accept方法判断），获取的数组放到files2里面
        File[]files2=file1.listFiles(fileter);//传递获取目录下的内容的对象fileter
        //遍历数组files2
        for (File f : files2) {
            System.out.println(f.getAbsoluteFile());//获取f的抽象路径
        }
    }
}
//第二种方法总体思路：
/**1.创建FilenameFilter的对象
 * 2.重写FilenameFilter的方法
 * 3.拿到所有的文件的抽象路径，用if条件进行提取，满足的添加后输出，不满足的不添加。
 * 使用的方法：
 * 对要筛选的目录调用.listFiles(创建的FilenameFilter对象)方法，将该目录下的文件放到数组中。
 * for循环遍历数组中的所有内容
 * 对for循环中的内容调用.getAbsoluteFile()获取路径
 */
